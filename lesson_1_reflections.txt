How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It is easier to identify where de mistake is.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can know all the changes I have made overtime.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros I can choose when to save. 
    Cons I might forget ot save and not have a previous version of my work.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because more oftern than not programming task have diffretent files related to each other.
    And that is not the cade wiht documents in google docs.

How can you use the commands git log and git diff to view the history of files?

    git log: shows a list of recent commits with information about them
    git diff: followed by commit IDs will compare the two vesions od the code in those commits

    got clone: followed by a space and the repository URL; clones a repository

    q: to quit; stop viewing git log

    git config --global color.ui auto: to get colored diff output

How might using version control make you more confident to make changes that
could break something?

    I will be more confident becaue if I breack somethin I can go back and restore an 
    order version that was working properly.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like ot use git in my own projects